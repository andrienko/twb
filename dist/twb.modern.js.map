{"version":3,"file":"twb.modern.js","sources":["../src/classNames.ts","../src/noop.ts","../src/domReady.ts","../src/randomId.ts","../src/useUpdatedValues.ts","../src/useTextChangeHandler.ts","../src/useToggle.ts","../src/useState.ts","../src/mountReact.ts"],"sourcesContent":["type Arg = string | Record<string, any> | undefined | null | number | Arg[];\n\nconst argToArr = (argOrArgs: Arg): string[] => {\n  if (typeof argOrArgs === 'string' || typeof argOrArgs === 'number') {\n    return [`${argOrArgs}`];\n  } else if (Array.isArray(argOrArgs)) {\n    let classNames: string[] = [];\n\n    for (let i = 0; i < argOrArgs.length; i++) {\n      const argClassNames = argToArr(argOrArgs[i]);\n      for (let ci = 0; ci < argClassNames.length; ci++) {\n        classNames.push(argClassNames[ci] as string);\n      }\n    }\n    return classNames;\n  } else {\n    const classNames: string[] = [];\n    for (let key in argOrArgs) {\n      if (argOrArgs[key]) {\n        classNames.push(key.trim());\n      }\n    }\n    return classNames;\n  }\n};\n\nexport const classNames = (...args: Arg[]): string => {\n  const classNames: string[] = [];\n  for (let i = 0; i < args.length; i++) {\n    if (args[i]) {\n      const classNameStrings = argToArr(args[i] as Arg);\n      for (let ci = 0; ci < classNameStrings.length; ci++) {\n        let className = classNameStrings[ci];\n        if (className) {\n          className = className.trim();\n          if (!classNames.includes(className)) {\n            classNames.push(className);\n          }\n        }\n      }\n    }\n  }\n  return classNames.join(' ');\n};\n","export const noop = () => {};\n","import { noop } from './noop';\n\nexport type DomReadyArg = (e?: Event) => void;\nexport type DomReadyReturn = () => void;\n\nconst eventName: string = 'DOMContentLoaded';\nconst isIframe: boolean = 'doScroll' in document.documentElement;\nlet isLoaded: boolean = !!document.readyState.match(isIframe ? /^loaded|^c/ : /^loaded|^i|^c/);\n\nconst onLoad = function () {\n  isLoaded = true;\n  document.removeEventListener(eventName, onLoad);\n};\n\nif (!isLoaded) {\n  document.addEventListener(eventName, onLoad);\n}\n\n/**\n * Helper that will fire provided function if DOM is already loaded or after it will be loaded.\n * @param addedListener\n */\nexport const domReady = (addedListener: DomReadyArg): DomReadyReturn => {\n  if (!isLoaded) {\n    const handler = function (e: Event) {\n      document.removeEventListener('eventName', addedListener);\n      addedListener(e);\n    };\n\n    document.addEventListener(eventName, handler);\n    return function () {\n      document.removeEventListener(eventName, handler);\n    };\n  } else {\n    window.setTimeout(() => addedListener(undefined), 0);\n    return noop;\n  }\n};\n","export const randomId = (length?: number): string => {\n  let id = '';\n  if (!length || length <= 0) {\n    length = 6;\n  }\n  while (id.length < length) {\n    id += Math.random().toString(16).slice(2);\n  }\n  return id.slice(0, length);\n};\n\nlet currentId = 0;\nexport const nextId = (): string => {\n  return (currentId++).toString(16);\n};\n\nexport const fakeUuid = (): string => {\n  const chars = randomId(32);\n  return `${chars.slice(0, 8)}-${chars.slice(8, 12)}-${chars.slice(12, 16)}-${chars.slice(16, 20)}-${chars.slice(\n    20,\n    32\n  )}`;\n};\n","import React from 'react';\n\nexport const useUpdatedValues = (props: Record<string, unknown>, label: string = '') => {\n  const previousRef = React.useRef<Record<string, unknown>>({});\n  React.useEffect(() => {\n    if (previousRef.current) {\n      const changesObj: Record<string, unknown[]> = {};\n      for (const [key, value] of Object.entries({ ...previousRef.current, ...props })) {\n        if (previousRef.current[key] !== value) {\n          changesObj[key] = [previousRef.current[key], value];\n        }\n      }\n      if (Object.keys(changesObj).length) {\n        console.log(`[updated values] ${label}`, changesObj);\n      }\n    }\n    previousRef.current = props;\n  });\n};\n","import React from 'react';\n\nexport const useTextChangeHandler = (setter: React.Dispatch<React.SetStateAction<string>>) =>\n  React.useCallback((e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => setter(e.currentTarget.value), [\n    setter,\n  ]);\n","import React from 'react';\n\nexport const useToggle = (setter: React.Dispatch<React.SetStateAction<boolean>>) =>\n  React.useCallback(() => setter((s) => !s), [setter]);\n","import React from 'react';\n\nexport type State<SV> = {\n  value: SV;\n  set: React.Dispatch<React.SetStateAction<SV>>;\n};\n\nexport const useState = <SV>(defaultValue: SV | (() => SV)): State<SV> => {\n  const [value, set] = React.useState<SV>(defaultValue);\n  return React.useMemo(() => ({ value, set }), [value, set]);\n};\n","import { createElement } from 'react';\nimport { render } from 'react-dom';\nimport { domReady } from './domReady';\nimport { ReactComponent } from './types';\n\nexport const mountReact = (el: ReactComponent, className?: string) =>\n  domReady(() => {\n    const wrapper = document.createElement('div');\n    if (className) {\n      wrapper.className = className;\n    }\n    document.body.appendChild(wrapper);\n    render(createElement(el), wrapper);\n  });\n"],"names":["argToArr","argOrArgs","Array","isArray","classNames","i","length","argClassNames","ci","push","key","trim","args","classNameStrings","className","includes","join","noop","eventName","isIframe","document","documentElement","isLoaded","readyState","match","addEventListener","onLoad","removeEventListener","domReady","addedListener","window","setTimeout","undefined","handler","e","randomId","id","Math","random","toString","slice","currentId","nextId","fakeUuid","chars","useUpdatedValues","props","label","previousRef","React","useRef","useEffect","current","changesObj","value","Object","entries","_extends","keys","console","log","useTextChangeHandler","setter","useCallback","currentTarget","useToggle","s","useState","defaultValue","set","useMemo","mountReact","el","wrapper","createElement","body","appendChild","render"],"mappings":"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"}